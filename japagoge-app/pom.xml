<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.igormaznitsa</groupId>
    <artifactId>japagoge-pom</artifactId>
    <version>2.1.3-SNAPSHOT</version>
  </parent>

  <artifactId>japagoge-app</artifactId>
  <packaging>jar</packaging>

  <description>Screen recorder to save animation as APNG and GIF files</description>

  <url>https://github.com/raydac/japagoge</url>

  <inceptionYear>2021</inceptionYear>

  <properties>
    <embedded.jdk.provider>BELLSOFT</embedded.jdk.provider>
    <embedded.jdk.type>jdk</embedded.jdk.type>
    <embedded.jdk.version>17.0.3.1+2</embedded.jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>11</java.version>
    <app.name>${project.build.finalName}</app.name>
    <executable.jar>false</executable.jar>
    <jna.version>5.11.0</jna.version>
    <maven.compiler.source>9</maven.compiler.source>
    <maven.compiler.target>9</maven.compiler.target>
  </properties>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/raydac/japagoge/issues</url>
  </issueManagement>

  <scm>
    <url>https://github.com/raydac/japagoge</url>
    <connection>scm:git:git://github.com/raydac/japagoge.git</connection>
    <developerConnection>scm:git:git@github.com:raydac/japagoge.git</developerConnection>
  </scm>

  <organization>
    <name>Igor Maznitsa</name>
    <url>http://www.igormaznitsa.com</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <profiles>
    <profile>
      <id>makesh</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>make-sh</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>cat</executable>
                  <commandlineArgs>${basedir}${file.separator}stub.sh.txt ${project.build.directory}${file.separator}${app.name}.jar</commandlineArgs>
                  <outputFile>${project.build.directory}${file.separator}${app.name}.sh</outputFile>
                </configuration>
              </execution>
              <execution>
                <id>make-executable</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>chmod</executable>
                  <commandlineArgs>+x ${project.build.directory}${file.separator}${app.name}.sh</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>publish</id>
      <dependencies>
        <dependency>
          <groupId>com.igormaznitsa</groupId>
          <artifactId>japagoge-win-launcher</artifactId>
          <version>${project.version}</version>
          <type>mvn-golang</type>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>de.perdian.maven.plugins</groupId>
            <artifactId>macosappbundler-maven-plugin</artifactId>
            <version>1.17.1</version>
            <configuration>
              <plist>
                <CFBundleIconFile>appico.icns</CFBundleIconFile>
                <CFBundleDisplayName>Japagoge APNG recorder</CFBundleDisplayName>
                <CFBundleDevelopmentRegion>English</CFBundleDevelopmentRegion>
                <CFBundleURLTypes>
                  <string>msa</string>
                </CFBundleURLTypes>
                <JVMVersion>9+</JVMVersion>
                <JVMMainClassName>Japagoge</JVMMainClassName>
              </plist>
              <dmg>
                <generate>true</generate>
                <autoFallback>true</autoFallback>
              </dmg>
            </configuration>
            <executions>
              <execution>
                <id>make-macos-bundle</id>
                <phase>package</phase>
                <goals>
                  <goal>bundle</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.igormaznitsa</groupId>
            <artifactId>mvn-jlink-wrapper</artifactId>
            <version>1.1.1</version>
            <executions>
              <execution>
                <id>cache-work-jdk</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.work.path</jdkPathProperty>
                  <provider>${embedded.jdk.provider}</provider>
                  <providerConfig>
                    <type>${embedded.jdk.type}</type>
                    <version>${embedded.jdk.version}</version>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-linux-jdk-amd64</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.linux.amd64.path</jdkPathProperty>
                  <provider>${embedded.jdk.provider}</provider>
                  <providerConfig>
                    <type>${embedded.jdk.type}</type>
                    <version>${embedded.jdk.version}</version>
                    <os>linux</os>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-macos-jdk-amd64</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.macos.amd64.path</jdkPathProperty>
                  <provider>${embedded.jdk.provider}</provider>
                  <providerConfig>
                    <type>${embedded.jdk.type}</type>
                    <version>${embedded.jdk.version}</version>
                    <os>macos</os>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-macos-jdk-aarch64</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.macos.aarch64.path</jdkPathProperty>
                  <provider>${embedded.jdk.provider}</provider>
                  <providerConfig>
                    <type>${embedded.jdk.type}</type>
                    <version>${embedded.jdk.version}</version>
                    <os>macos</os>
                    <arch>aarch64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-windows-jdk-amd64</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.windows.amd64.path</jdkPathProperty>
                  <provider>${embedded.jdk.provider}</provider>
                  <providerConfig>
                    <type>${embedded.jdk.type}</type>
                    <os>windows</os>
                    <version>${embedded.jdk.version}</version>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>call-jdeps</id>
                <goals>
                  <goal>jdeps</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <output>${project.build.directory}${file.separator}jdeps.out</output>
                  <options>
                    <option>-s</option>
                    <option>
                      ${project.build.directory}${file.separator}${project.build.finalName}.jar
                    </option>
                  </options>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-linux-amd64</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out
                  </jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_linux_amd64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.linux.amd64.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-windows-amd64</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out
                  </jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_windows_amd64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.windows.amd64.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-macos-amd64</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out
                  </jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_macos_amd64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.macos.amd64.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-macos-aarch64</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out
                  </jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_macos_aarch64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.macos.aarch64.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.akathist.maven.plugins.launch4j</groupId>
            <artifactId>launch4j-maven-plugin</artifactId>
            <version>2.1.2</version>
            <configuration>
              <downloadUrl>https://bell-sw.com/pages/downloads/#/java-11-lts</downloadUrl>
              <classPath>
                <mainClass>Japagoge</mainClass>
                <preCp>anything</preCp>
              </classPath>
              <icon>${basedir}${file.separator}..${file.separator}assets${file.separator}appico.ico</icon>
              <outfile>${project.build.directory}/${app.name}_WINDOWS.exe</outfile>
              <singleInstance>
                <mutexName>japagogegrabber</mutexName>
              </singleInstance>
              <headerType>gui</headerType>
              <versionInfo>
                <fileVersion>2.1.0.0</fileVersion>
                <txtFileVersion>${project.version}</txtFileVersion>
                <fileDescription>Screen capturing in APNG and GIF</fileDescription>
                <copyright>2021 Igor Maznitsa</copyright>
                <productVersion>2.1.0.0</productVersion>
                <txtProductVersion>${project.version}</txtProductVersion>
                <productName>${project.name}</productName>
                <companyName>igormaznitsa.com</companyName>
                <internalName>${project.name}</internalName>
                <originalFilename>${app.name}.exe</originalFilename>
              </versionInfo>
            </configuration>
            <executions>
              <execution>
                <id>l4j-full-pack</id>
                <phase>install</phase>
                <goals>
                  <goal>launch4j</goal>
                </goals>
                <configuration>
                  <jre>
                    <minVersion>11</minVersion>
                    <jdkPreference>preferJre</jdkPreference>
                  </jre>
                  <outfile>${project.build.directory}/${app.name}.exe</outfile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>make-linux-amd64</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-linux-jdk-amd64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/linux_amd64.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-windows</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-windows-jdk-amd64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/windows_amd64.xml
                    </descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-mac</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-macos-jdk-amd64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/mac_amd64.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-mac-aarch64</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-macos-jdk-aarch64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/mac_aarch64.xml
                    </descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>truezip-maven-plugin</artifactId>
            <version>1.2</version>
            <executions>
              <execution>
                <id>remove-manifest-from-mac-jar</id>
                <goals>
                  <goal>remove</goal>
                </goals>
                <phase>install</phase>
                <configuration>
                  <fileset>
                    <directory>
                      ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-amd64.jar${file.separator}META-INF
                    </directory>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <id>remove-manifest-from-mac-aarch64-jar</id>
                <goals>
                  <goal>remove</goal>
                </goals>
                <phase>install</phase>
                <configuration>
                  <fileset>
                    <directory>
                      ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-aarch64.jar${file.separator}META-INF
                    </directory>
                  </fileset>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>1.0.1</version>
            <executions>
              <execution>
                <id>rename-mac-jar-to-zip</id>
                <phase>install</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <sourceFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-amd64.jar
                  </sourceFile>
                  <destinationFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-amd64.zip
                  </destinationFile>
                </configuration>
              </execution>
              <execution>
                <id>rename-mac-aarch64-jar-to-zip</id>
                <phase>install</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <sourceFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-aarch64.jar
                  </sourceFile>
                  <destinationFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-aarch64.zip
                  </destinationFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>clean-temp</id>
                <phase>install</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <excludeDefaultDirectories>true</excludeDefaultDirectories>
                  <filesets>
                    <fileset>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.jar.original</include>
                        <include>original-japagoge-*.jar</include>
                        <include>japagoge.exe</include>
                        <include>jdeps.out</include>
                      </includes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <version>${jna.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <fork>true</fork>
            <compilerArgument>-XDignore.symbol.file</compilerArgument>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>no-duplicate-declared-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/NOTICE.txt</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/license</exclude>
                    <exclude>META-INF/AL2.0</exclude>
                    <exclude>META-INF/LGPL2.1</exclude>
                    <exclude>META-INF/COPYING</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>Japagoge</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


</project>
